function [struct] = intProf(struct,backgroundwidth)
% Generate intensity profiles from the ROI stacks in the output of roiGeneration
% and perform background subtraction on the profiles
% 
% Outputs
% Struct [structure]: A data structure containing objects (Intensity 
%                     profiles for each ROI, 3D matrix with each ROI 
%                     contained in a different z, and coordinates of 
%                     the ROIs).
%   struct.rois: 3D matrix with each ROI contained in a different z.
%   struct.angle: The angle of rotation to straighten the image (number, in degrees).
%   struct.rotate: The angle of rotation required to display the image with
%   separations running vertically instead of horizontally (number, in
%   degrees).
%   struct.array_bounds: User selected boundaries of the array as a 3x2
%   matrix (rows contain upper left, upper right, and lower left
%   coordinates respectively; first column contains x-coordinates; second column contains y-coordinates). 
%   struct.name: The name of the protein target entered by the user
%   (string).
%   struct.wells_per_row: The number of wells per row based on the user
%   selected array bounds and horizontal well spacing.
%   struct.rows: Number of rows in the array
%   struct.int_prof: a 3D matrix containing an array of the intensity 
%                    profiles [x, intensity value] indexed by the 
%                    third dimension
%                    
% 
% Inputs
%   Struct [structure]: The data structure from roiGeneration containing the
%                       ROIs for each lane
%   backgroundWidth [int]: width of the background region for axial
%                          background subtraction (in pixels)
%                          

% Load the matrix of ROIs
mat=struct.rois;

% Determine the number and size of the intensity profiles
[x_dim,y_dim,z_dim]=size(mat);

% Preallocate the intensity profile matrix with zeros

int_profiles=zeros(x_dim,2,z_dim);

% pix_conversion is the number of microns per pixel
pix_conversion=5;

% for loop to generate the intensity profiles for each ROI in the z-stack 
%of the matrix Mat. The intensity profile is an average of the pixel intensities 
%across the short-axis of the ROI. The background regions are defined by the
%parameter backgroundWidth, and the average pixel intensity in the left and
%right background regions are calculated. The background subtracted intensity
%profile is generated by subtracting the mean background intensity at each 
%point along the long-axis of the ROI from the average pixel intensity.
figure
 for i=1:z_dim
    
    % Get the image of the lane
    lane = mat(:,:,i);
    
    % Get a list of the x coordinates
    dist = (0:pix_conversion:pix_conversion*(x_dim-1));
    
    % Sum the image along the y-axis (transverse to separation axis) to
    % generate an intensity profile
    int = sum(lane,2);
    avg_int = int / (y_dim);
    
    % Get the background regions to the left and right of the lane
    left_backgroundregion = lane(:, (1:backgroundwidth)); 
    right_backgroundregion = lane(:, (((end + 1) - backgroundwidth):end));
    
    % Calculate average background intensity in the left and right regions
    left_background_int = (sum(left_backgroundregion, 2)) / backgroundwidth;
    right_background_int = sum(right_backgroundregion, 2)/ backgroundwidth;
    
    % Create a vector containing the background intensity for each
    % x-coordinate along the lane
    mean_background = (left_background_int + right_background_int) / 2;
    
    % Subtract the background vector from the intensity profile
    bsub_int = avg_int - mean_background;
    
    % Create a matrix with one column containing the x-coordinates and a
    % second column containing the background subtracted intensity profile
    lane_profile=[dist',bsub_int];
    
    % Add the intensity profile to the matrix of intensity profiles
    int_profiles(:,:,i) = lane_profile;
    
    % Add the intensity profile to the plot
    plot(dist',bsub_int);
    
    hold on
 end

% Save the intensity profiles to the data structure
struct.int_prof = int_profiles;



end

